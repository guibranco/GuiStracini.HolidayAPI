version: 3.2.{build}
skip_tags: true
image: Visual Studio 2019
configuration: Release
skip_commits:
  message: /(Create|Update) .*\.(png|jpg|jpeg|bmp|gif|md)/

environment:

  SONAR_TOKEN: 
    secure: RrgnyBWUgGKOwEnWRGPS6usKzoUY0oOhVx0lW2KuhEwVvCd76sP1Kxv+goWO2h1+
  GITHUB_TOKEN:
    secure: oFbIUzvIYjLLUlj5rqzp9KkX8xAf/V3dUGBU0HUNC7kcHyMGNcxpWGAmvR6CJ8M6
  CODACY_PROJECT_TOKEN:
    secure: Nxq5KFipyTbqGMIeLQe2gxKZOLjIhp3NmWCJZix24URUoL8XV59zK0NOk/zYCL3A
  apiKey:
    secure: Rk0Qh8JNpDSZ+q4UmgWYrfJtuEczRnChlGYspnmzOw+Wnblhyde8f1x+/9RB1OdJ

dotnet_csproj: 
  patch: true 
  file: '**\*.csproj' 
  version: '{version}' 
  package_version: '{version}' 
  assembly_version: '{version}' 
  file_version: '{version}' 
  informational_version: '{version}' 

init:
- set PATH=C:\Program Files\Java\jdk15\bin;%PATH%
- set JAVA_HOME_11_X64=C:\Program Files\Java\jdk15
- set JAVA_HOME=C:\Program Files\Java\jdk15

before_build:
- ps: $env:SOLUTION_NAME = "$env:APPVEYOR_REPO_NAME" -replace ".*/","" -replace "-SDK-dotnet",""
- ps: $env:SONAR_PROJECT = "$env:APPVEYOR_REPO_NAME" -replace "/","_"
- ps: $env:SONAR_ORGANIZATION = "$env:APPVEYOR_REPO_NAME" -replace "/.*$","-github"
- cmd: nuget restore
- cmd: choco install opencover.portable
- cmd: choco install codecov
- cmd: curl -L https://github.com/codacy/codacy-coverage-reporter/releases/download/13.6.0/codacy-coverage-reporter-assembly.jar > ./codacy-test-reporter.jar
- cmd: dotnet tool install --global dotnet-sonarscanner

build:
  publish_nuget: true
  include_nuget_references: true
  parallel: true
  verbosity: normal

build_script:
- dotnet sonarscanner begin 
 /k:"%SONAR_PROJECT%" 
 /o:"%SONAR_ORGANIZATION%" 
 /d:sonar.host.url="https://sonarcloud.io" 
 /d:sonar.login="%SONAR_TOKEN%" 
 /v:"%APPVEYOR_BUILD_NUMBER%" 
 /d:sonar.exclusions="**/bin/**/*,**/obj/**/*" 
 /d:sonar.coverage.exclusions="**/%SOLUTION_NAME%.*Tests/**" 
 /d:sonar.cs.opencover.reportsPaths="%CD%\Tests\%SOLUTION_NAME%.IntegrationTests\coverage.opencover.xml,%CD%\Tests\%SOLUTION_NAME%.UnitTests\coverage.opencover.xml"

- dotnet build %SOLUTION_NAME%.sln

- dotnet test .\Tests\%SOLUTION_NAME%.IntegrationTests\%SOLUTION_NAME%.IntegrationTests.csproj 
 /p:CollectCoverage=true 
 /p:CoverletOutputFormat="opencover"

- codecov -f "%CD%\Tests\%SOLUTION_NAME%.IntegrationTests\coverage.opencover.xml"

- java 
 -jar 
 ./codacy-test-reporter.jar report 
 -l CSharp 
 -t %CODACY_PROJECT_TOKEN%
 -r "%CD%\Tests\%SOLUTION_NAME%.IntegrationTests\coverage.opencover.xml"

- dotnet test .\Tests\%SOLUTION_NAME%.UnitTests\%SOLUTION_NAME%.UnitTests.csproj 
 /p:CollectCoverage=true 
 /p:CoverletOutputFormat="opencover"

- codecov -f "%CD%\Tests\%SOLUTION_NAME%.UnitTests\coverage.opencover.xml"

- java 
 -jar 
 ./codacy-test-reporter.jar report 
 -l CSharp 
 -t %CODACY_PROJECT_TOKEN%
 -r "%CD%\Tests\%SOLUTION_NAME%.UnitTests\coverage.opencover.xml"

- dotnet sonarscanner end /d:sonar.login="%SONAR_TOKEN%"

after_build:
- xcopy %CD%\Src\%SOLUTION_NAME%\bin\Release\netstandard2.1\*.* %CD%\Build\
- copy %CD%\Src\%SOLUTION_NAME%\bin\Release\%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.nupkg %SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.nupkg
- rd /s /q %CD%\Src\%SOLUTION_NAME%\bin\Release\
- xcopy %CD%\Tests\%SOLUTION_NAME%.IntegrationTests\*.xml %CD%\Coverage\
- xcopy %CD%\Tests\%SOLUTION_NAME%.IntegrationTests\*.json %CD%\Coverage\
- xcopy %CD%\Tests\%SOLUTION_NAME%.UnitTests\*.xml %CD%\Coverage\
- xcopy %CD%\Tests\%SOLUTION_NAME%.UnitTests\*.json %CD%\Coverage\
- cd %CD%
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.zip" Build
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.Coverage.zip" Coverage

artifacts:
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.zip
  name: ZipFile
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.nupkg
  name: Package
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.Coverage.zip
  name: Coverage

deploy:
- provider: Environment
  name: NuGet
  on:
   branch: master
  artifact: Package
- provider: GitHub
  on:
   branch: master
  tag: $(appveyor_build_version)
  auth_token: $(GITHUB_TOKEN)
  force_update: true
  artifact: ZipFile
